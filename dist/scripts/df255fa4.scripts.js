"use strict";function AppCtrl(a){a.app={name:"strange-medows",lastbuild:"fail",user:"eric@heroku.com"}}var neovacUIApp=angular.module("neovacUIApp",["ngResource","nvServices","herokuOauth"]);neovacUIApp.config(["$locationProvider","$routeProvider",function(a,b){b.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/:kind/:value",{templateUrl:"views/main.html",controller:"xidCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("herokuOauth",["angularOauth"]).constant("HerokuTokenVerifier",function(a,b,c){var d=angular.injector(["ng"]);return d.invoke(["$http","$rootScope",function(d,e){var f="https://id.heroku.com/oauth/tokeninfo";return e.$apply(function(){d({method:"GET",url:f,params:{access_token:b}}).success(function(b){b.audience==a.clientId?c.resolve(b):c.reject({name:"invalid_audience"})}).error(function(a,b,d,e){c.reject({name:"error_response",data:a,status:b,headers:d,config:e})})}),c}])}).config(["TokenProvider","HerokuTokenVerifier",function(a,b){a.extendConfig({authorizationEndpoint:"https://id.heroku.com/oauth/authorize",verifiyFunc:b})}]),angular.module("nvServices",["ngResource"]).factory("XidSet",["$resource",function(a){return a("http://neovac.herokuapp.com/:kind/:value.json",{value:"value",kind:"kind"})}]),angular.module("angularOauth",[]).provider("Token",function(){var a=function(a){var b=[];return angular.forEach(a,function(a,c){b.push(encodeURIComponent(c)+"="+encodeURIComponent(a))}),b.join("&")},b="token",c={},d={clientId:c,redirectUri:c,authorizationEndpoint:c,localStorageName:"accessToken",verifyFunc:c,scopes:[]};this.extendConfig=function(a){d=angular.extend(d,a)},this.$get=["$q","$http","$window","$rootScope",function(e,f,g,h){var i=[];if(angular.forEach(d,function(a,b){a===c&&i.push(b)}),i.length)throw new Error("TokenProvider is insufficiently configured.  Please configure the following options using TokenProvider.extendConfig: "+i.join(", "));if(!d.clientId)throw new Error("clientId needs to be configured using TokenProvider.");var j=function(){return{response_type:b,client_id:d.clientId,redirect_uri:d.redirectUri,scope:d.scopes.join(" ")}};return{get:function(){return localStorage[d.localStorageName]},set:function(a){localStorage[d.localStorageName]=a},verifyAsync:function(a){var b=e.defer();return d.verifyFunc(d,a,b),b.promise},getTokenByPopup:function(b,c){c=angular.extend({name:"AuthPopup",openParams:{width:650,height:300,resizable:!0,scrollbars:!0,status:!0}},c);var f=e.defer(),i=angular.extend(j(),b),k=d.authorizationEndpoint+"?"+a(i),l=function(a){var b=[];return angular.forEach(a,function(a,c){(a||0===a)&&(a=a===!0?"yes":a,b.push(c+"="+a))}),b.join(",")},m=window.open(k,c.name,l(c.openParams));return angular.element(g).bind("message",function(a){a.source==m&&a.origin==window.location.origin&&h.$apply(function(){a.data.access_token?f.resolve(a.data):f.reject(a.data)})}),f.promise}}}]}).controller("CallbackCtrl",["$scope","$location",function(a,b){function c(a){var b,c,d={};return angular.forEach((a||"").split("&"),function(a){a&&(b=a.split("="),c=decodeURIComponent(b[0]),d[c]=angular.isDefined(b[1])?decodeURIComponent(b[1]):!0)}),d}var d=b.path().substring(1),e=c(d);window.opener.postMessage(e,"*"),window.close()}]);var neovacUIApp=angular.module("neovacUIApp");neovacUIApp.config(["TokenProvider",function(a){var b=document.URL;a.extendConfig({clientId:"93fd898c-8bd8-41cc-bc22-af5bd04b9408",redirectUri:b+"auth/heroku/callback",authorizationEndpoint:"https://id.heroku.com/oauth/authorize",verifyFunc:function(){return!0}})}]),neovacUIApp.controller("xidCtrl",["$scope","XidSet","$location","$routeParams","Token",function(a,b,c,d,e){a.query=d.value,a.updateXidSet=function(){console.log("getting xids"),console.log(d),a.xids=b.query({value:d.value,kind:d.kind}),console.log("done getting xids"),console.log(a.xids)},a.accessToken=e.get(),a.authenticate=function(){e.getTokenByPopup().then(function(b){e.verifyAsync(b.access_token).then(function(){a.accessToken=b.access_token,a.expiresIn=b.expires_in,Toekn.set(b.access_token)},function(){alert("token failed")})},function(){alert("failed to get token from popup")})},a.getDate=function(a){var b=new Date(1e3*a);return b.getHours(),b.getMinutes(),b.getSeconds(),console.log(a),b.toUTCString()},a.updateLocation=function(){var b=/([0-9a-fA-F]*-[0-9a-fA-F]*-[0-9a-fA-F]*-[0-9a-fA-F]*-[0-9a-fA-F]*)/,d=/^[0-9]+$/,e="",f=a.query;b.test(a.query)?(console.log("found uuid"),e="request_id"):d.test(a.query)?(console.log("found AppId"),e="app_id"):(console.log("found AppName"),e="app"),c.path(e+"/"+f)},d.value&&a.updateXidSet()}]);var neovacUIApp=angular.module("neovacUIApp");neovacUIApp.controller("MainCtrl",["$scope",function(){}]),neovacUIApp.directive("nvXidsView",function(){return{templateUrl:"/views/xidsView.html",scope:{}}});